Need some better documentation -- in the source, as manual pages and on the Gant website.

In an include statement, if the class name cannot be found then you get a weird error message:

  Caused by: groovy.lang.MissingPropertyException: No such property: org for class: build
          at groovy.lang.MetaClassImpl.getProperty(MetaClassImpl.java:734)

If there are compilation errors in the Gant file then sometimes the proper error message is not reported,
just an exception stack trace.  Using groovy on the Gant file generally shows the errors but Gant should
have done the right thing in the first place.

Get the GANTLIB stuff finished so it actually works.  First of all decide what it is all for :-)

target ( flob ) { . . .} does not generate a sane error message.  Yes, it does. :-)

target ( flob : '' , thing : '' ) { . . . } is treated as an error but should allow for definition of things
like dependencies.  Pick off the special names that are understood such as dependencies and then error if
there is more than one left.

Error messages for things like:

      target ( a , '' ) { . . . }

are not good.  Need to provide error handling versions of target.

Add a --propertyfile <filename> option.

In the Maven target set, the compilation always happens against the Groovy installation that initiated the
Gant run.  Need to add a way of specifying which Groovy jar to compile against.

How to add compilerarg tags to the Maven target set?

The Maven target set and the Ivy tool assume that System.properties.'groovy.home' is set which is not the case
always.  In particular, this will only be true when Gant is initiated from the command line, it is not true
when Gant is initiated via the Ant task.

The LaTeX tool does not make use of the return code from (pdf)latex, and it should.

Using a target name of target gives a very weird error message.

The tests currently work fine with Ant or Gant and fail with Maven.  This difference needs investigating.

Add all the above as JIRA issues.
