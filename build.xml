<?xml version="1.0" encoding="UTF-8"?>

<!--
  Gant - A Groovy build framework based on scripting Ant tasks.

  Copyright Â© 2006-8 Russel Winder

  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
  compliance with the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software distributed under the License is
  distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
  implied. See the License for the specific language governing permissions and limitations under the
  License.

  Author : Russel Winder <russel.winder@concertant.com>

  This Ant script provides the bootstrap capability to install Gant for the first time for those people
  installing from a Subversion checkout.  This build assumes the environment variable GROOVY_HOME is set.

  This Ant script also provides targets for continuous integration servers.  This build assumes nothing except
  that that comes with Gant.  In particular, all the Groovy and JUnit jars are brought in from the Maven
  repository using the Maven Ant task, the jar for which is part of the Gant distribution.
-->

<project name="Gant" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <property file="local.build.properties"/>
  <property file="build.properties"/>

  <property environment="environment"/>

  <property name="sourceDirectory" value="src/main/groovy"/>
  <property name="testsDirectory" value="src/test/groovy"/>
  <property name="jarsDirectory" value="jarfiles"/>
  <property name="scriptsDirectory" value="scripts"/>

  <property name="buildDirectory" value="target"/>
  <property name="buildClassesDirectory" value="${buildDirectory}/classes"/>
  <property name="buildTestClassesDirectory" value="${buildDirectory}/test-classes"/>
  <property name="buildTestReportsDirectory" value="${buildDirectory}/test-reports"/>

  <property name="buildMetadataDirectory" value="${buildClassesDirectory}/META-INF"/>

  <!--
      The bootstrap build assumed that GROOVY_HOME is set and points to a Groovy installation.  In order to
      compile the Groovy, Ant, ASM, Antlr and Commons CLI jars are needed.  ASM and Antlr are only needed
      for Groovy, Ant and Commons CLI are actually needed directly.  JUnit is needed only for compiling and
      running the tests.
 
      All compilations use the path id compileJarSet and the tests the path id testJarSet.  This
      parameterization of the targets is important for supporting both bootstrapp installation and
      continuous integration support.
  -->

  <target name="-initializeGroovyHome">
    <property name="groovyHome" value="${environment.GROOVY_HOME}"/>
    <path id="compileJarSet">
      <fileset dir="${groovyHome}/lib" includes="groovy*.jar"/>
      <fileset dir="${groovyHome}/lib" includes="commons-cli*.jar"/>
      <fileset dir="${groovyHome}/lib" includes="asm*.jar"/>
      <fileset dir="${groovyHome}/lib" includes="ant*.jar"/> <!-- Picks up antlr as well as ant. This is intended. -->
    </path>
    <path id="testJarSet">
      <fileset dir="${groovyHome}/lib" includes="junit*.jar"/>
      <path refid="compileJarSet"/>
    </path>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="compileJarSet"/>
  </target>

  <target name="-compile">
    <mkdir dir="${buildClassesDirectory}"/>
    <groovyc srcdir="${sourceDirectory}" destdir="${buildClassesDirectory}">
      <classpath>
        <pathelement location="${buildClassesDirectory}"/>
        <path refid="compileJarSet"/>
      </classpath>
      <javac source="1.5" target="1.5" debug="on"/>
    </groovyc>
  </target>

  <target name="compile" depends="-initializeGroovyHome,-compile" description="Compile everything needed for a bootstrap build of Gant."/>

  <target name="-compileTests" depends="-compile">
    <mkdir dir="${buildTestClassesDirectory}"/>
    <groovyc srcdir="${testsDirectory}" destdir="${buildTestClassesDirectory}">
      <classpath>
        <pathelement location="${buildClassesDirectory}"/>
        <path refid="testJarSet"/>
      </classpath>
      <javac source="1.5" target="1.5" debug="on"/>
    </groovyc>
  </target>

  <target name="compileTests" depends="-initializeGroovyHome,-compileTests" description="Compile all the tests for a bootstrap build of Gant."/>

  <target name="-test" depends="-compileTests">
    <mkdir dir="${buildTestReportsDirectory}"/>
    <junit printsummary="yes" fork="true">
      <formatter type="plain"/>
      <formatter type="xml"/> <!-- Must have XML output for the continuous integration builds. -->
      <batchtest todir="${buildTestReportsDirectory}">
        <fileset dir="${buildTestClassesDirectory}" includes="**/ant/tests/*_Test.class"/>
      </batchtest>
      <classpath>
        <pathelement location="${buildTestClassesDirectory}"/>
        <path refid="testJarSet"/>
      </classpath>
    </junit>
    <junit printsummary="yes" fork="true">
      <formatter type="plain"/>
      <formatter type="xml"/> <!-- Must have XML output for the continuous integration builds. -->
      <batchtest todir="${buildTestReportsDirectory}">
        <fileset dir="${buildTestClassesDirectory}" includes="**/*_Test.class" excludes="**/ant/tests/*"/>
      </batchtest>
      <classpath>
        <pathelement location="${buildTestClassesDirectory}"/>
        <pathelement location="${buildClassesDirectory}"/>
        <path refid="testJarSet"/>
      </classpath>
    </junit>
  </target>

  <target name="test" depends="-initializeGroovyHome,-test" description="Test a boostrap build of Gant."/>
 
  <target name="-package" depends="-test">
    <mkdir dir="${buildMetadataDirectory}"/>
    <copy todir="${buildMetadataDirectory}" file="LICENCE.txt"/>
    <manifest file="${buildMetadataDirectory}/MANIFEST.MF">
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Extension-Name" value="gant"/>
      <attribute name="Specification-Title" value="Gant: scripting Ant tasks with Groovy."/>
      <attribute name="Specification-Version" value="${gantVersion}"/>
      <attribute name="Specification-Vendor" value="The Codehaus"/>
      <attribute name="Implementation-Title" value="Gant: Scripting Ant tasks with Groovy."/>
      <attribute name="Implementation-Version" value="${gantVersion}"/> 
      <attribute name="Implementation-Vendor" value="The Codehaus"/>
    </manifest>
    <jar destfile="${buildDirectory}/gant-${gantVersion}.jar" basedir="${buildClassesDirectory}" manifest="${buildMetadataDirectory}/MANIFEST.MF"/>
  </target>

  <target name="package" depends="-initializeGroovyHome,-test" description="Create the jar file for a bootstrap build of Gant."/>

  <!--
      For bootstrap installation we need to get the Ivy jar from the Maven repository, so we need to set up
      the Maven Ant Task.  This is also needed for the continuous integration builds hence it is a separate
      target.
  -->
  <target name="-initializeMavenAntTask">
     <path id="mavenAntTaskPathId">
      <fileset dir="${jarsDirectory}" includes="maven-ant-tasks-*.jar"/>
    </path>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="mavenAntTaskPathId"/>
  </target>

  <condition property="installDirectoryIsSet">
    <isset property="installDirectory"/>
  </condition>

  <target name="-install" depends="-initializeMavenAntTask,package" if="installDirectoryIsSet">
    <pathconvert property="groovyJarName">
      <path>
        <fileset dir="${groovyHome}/lib" includes="groovy-1.*.jar"/>
      </path>
      <mapper type="flatten"/>
    </pathconvert>
     <copy todir="${installDirectory}/bin">
      <fileset dir="${scriptsDirectory}/bin"/>
      <fileset dir="${scriptsDirectory}/bin_requiresGroovy"/>
      <filterset>
        <filter token="GANT_VERSION" value="${gantVersion}"/>
        <filter token="GROOVYJAR" value="${groovyJarName}"/>
      </filterset>
    </copy>
    <chmod perm="a+x">
      <fileset dir="${installDirectory}/bin" includes="gant*,startGroovy.bat"/>
    </chmod>
     <copy todir="${installDirectory}">
      <fileset dir="${scriptsDirectory}" includes="conf/gant-starter.conf"/>
    </copy>
   <artifact:dependencies filesetId="ivyFilesetId">
      <dependency groupId="org.apache.ivy" artifactId="ivy" version="${ivyVersion}"/>
    </artifact:dependencies>
    <copy todir="${installDirectory}/lib">
      <fileset dir="${buildDirectory}" includes="gant*.jar"/>
      <fileset dir="${jarsDirectory}" includes="maven*.jar"/>
      <fileset refid="ivyFilesetId"/>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="-notInstallable" unless="installDirectoryIsSet">
    <echo message="Property installDirectory is not set, so cannot install.  Set installDirectory in file local.build.properties."/>
  </target>

  <target name="install" depends="-install,-notInstallable" description="Package and then install a boostrap build of Gant.  Install destination must be set in the file local.build.properties."/>

  <target name="-uninstall" if="installDirectoryIsSet">
    <delete dir="${installDirectory}"/>
  </target>

  <target name="-notUninstallable" unless="installDirectoryIsSet">
    <echo message="Property installDirectory is not set, so cannot uninstall.  Set installDirectory in file local.build.properties."/>
  </target>

 <target name="uninstall" depends="-uninstall,-notUninstallable" description="Uninstall Gant from installation destination."/>

  <target name="clean" description="Clean everything up.">
    <delete dir="${buildDirectory}"/>
    <delete>
      <fileset dir="." defaultexcludes="false">
        <include name="**/*~"/>
        <include name="texput.log"/>
        <include name="cobertura.ser"/>
      </fileset>
    </delete>
  </target>

  <!-- 
       The remainder of this is for the continuous integration builds for Canoo CruiseControl and Codehaus
       Bamboo.  If these systems worked with Gant directly we wouldn't need any of this.  Avoid any hassles
       with dependencies by using the Maven Ant task to pull down all the needed jars.  Could just read the
       POM and use those dependencies, but it seems better to explicitly specify them.  Note that we don't
       need to specify transitive dependencies here, the Maven Ant Task takes care of that.
       
       It is important that all the targets above are parameterized with compileJarSet as the compile path
       id and testJarSet as the test path id.
  -->

  <target name="-initializeMavenDownload" depends="-initializeMavenAntTask">
    <path id="compileJarSet"/>
     <artifact:dependencies pathId="compileJarSet">
      <dependency groupId="org.codehaus.groovy" artifactId="groovy" version="${groovyVersion}"/>
      <dependency groupId="commons-cli" artifactId="commons-cli" version="${commonsCliVersion}"/>
    </artifact:dependencies>
    <path id="testJarSet">
      <path refid="compileJarSet"/>
    </path>
   <artifact:dependencies pathId="testjarSet">
      <dependency groupId="junit" artifactId="junit" version="${junitVersion}"/>
    </artifact:dependencies>
    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="compileJarSet"/>
  </target>

  <target name="-ciBuild" depends="clean,-initializeMavenDownload,-package"/>
 
  <target name="cruiseControlBuild" depends="-ciBuild" description="Target for the Canoo CruiseControl build."/>

  <target name="bambooBuild" depends="-ciBuild" description="Target for the Codehaus Bamboo build."/>

</project>
