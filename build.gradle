//  Gant -- A Groovy way of scripting Ant tasks.
//
//  Copyright Â© 2008-9 Russel Winder
//
//  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
//  compliance with the License. You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software distributed under the License is
//  distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//  implied. See the License for the specific language governing permissions and limitations under the
//  License.
//
//  Author : Russel Winder <russel.winder@concertant.com>

ant.property ( file : 'local.build.properties' )
ant.property ( file : 'build.properties' )

//  If the user has GROOVY_HOME set then use that Groovy rather than the one speficied in the properties
//  files.  However we have to fiddle to find the version number.  Even then we still have to go out to the 

groovyHome = System.getenv ( ).'GROOVY_HOME'
if ( groovyHome ) {
  groovyLib = new File ( groovyHome , 'lib' )
  def groovyVersionPatternString = /^groovy-(all-)?([0-9].*)\.jar/
  def items = groovyLib.listFiles ( [ accept : { File dir , String name -> return ( name =~ groovyVersionPatternString ).find ( ) } ] as FilenameFilter )
  assert items 
  groovyVersion = ( items[0].name =~ groovyVersionPatternString )[0][2]
  assert groovyVersion
}
else {
  groovyVersion = ant.antProject.properties.groovyStandaloneVersion
}

println ( "Using Groovy version " + groovyVersion )

type = 'jar'
group = 'org.codehaus.gant'
artifact = 'gant'

version = ant.antProject.properties.gantVersion
archivesBaseName = artifact

usePlugin ( 'groovy' )

sourceCompatibility = 5
targetCompatibility = 5

manifest.mainAttributes (
                         'Built-By' : System.properties.'user.name' ,
                         'Extension-Name' : artifact ,
                         'Specification-Title' : 'Gant: scripting Ant tasks with Groovy.' ,
                         'Specification-Version' : version ,
                         'Specification-Vendor' : 'The Codehaus' ,
                         'Implementation-Title' : 'Gant: Scripting Ant tasks with Groovy.' ,
                         'Implementation-Version' : version , 
                         'Implementation-Vendor' : 'The Codehaus'
                         )

repositories {
  if ( groovyHome ) { flatDir ( name : 'groovyInstallation' , dirs : [ new File ( groovyHome , 'embeddable' ) , groovyLib ] ) }
  mavenCentral ( )
}

dependencies {
  groovy ( 'org.codehaus.groovy:groovy-all:' + groovyVersion )
  compile (
             'commons-cli:commons-cli:' + ant.antProject.properties.commonsCliVersion ,
             'org.apache.ant:ant:' + ant.antProject.properties.antVersion
           )
  testCompile (
                 'junit:junit:' + ant.antProject.properties.junitVersion
                  )
  testRuntime (
                 'org.apache.ivy:ivy:' + ant.antProject.properties.ivyVersion
                 )
}

test.doFirst {
  groovyAntTaskTestVersionPropertyFile = new File ( ant.antProject.properties.groovyAntTaskTestVersionPropertyFileName )
  groovyAntTaskTestVersionPropertyFile.write ( 'groovyAntTaskTestVersion = ' + groovyVersion )
}

test.doLast {
  groovyAntTaskTestVersionPropertyFile.delete ( )
}

clean.doLast {
  ant.delete { fileset ( dir : '.' , includes : '**/*~, cobertura.ser, texput.log' ) }
  ant.delete ( dir :  'target_forMavenTest' )
}

def packageTitle = 'Gant ' + version
def copyrightString = 'Copyright &#169; 1997&#8211;2009  The Codehaus.  All Rights Reserved.'

javadoc {
  dependsOn ( 'compile' )
  options.subPackages ( 'gant' , 'org.codehaus.gant' )
  options.overview ( 'overview.html' )
  options.showAll ( )
  options.encoding ( 'UTF-8' )
  options.setUse ( true )
  options.author ( true )
  options.version ( true )
  options.windowTitle ( packageTitle )
  options.docTitle ( packageTitle )
  options.footer ( copyrightString )
}
javadoc.doFirst {
    javadoc.title = packageTitle
    javadoc.options.docTitle = javadoc.title
}

groovydoc {
  dependsOn ( 'compile' )
  //options.subPackages ( 'gant' , 'org.codehaus.gant' )
  //options.overview ( 'overview.html' )
  //options.showAll ( )
  //options.encoding ( 'UTF-8' )
  //options.setUse ( true )
  ////options.author ( true )
  ////options.version ( true )
  //options.windowTitle ( packageTitle )
  //options.docTitle ( packageTitle )
  //options.footer ( copyrightString )
}

task myGroovyDoc ( dependsOn : 'compile' , description : 'Create the GroovyDoc API documentation.' ) << {
  def javadocDirPath = 'build/' + javadocDirName
  def packageIncludeSpec = 'gant.*,org.codehaus.gant.*'
  ant.delete ( dir : javadocDirPath , quiet : 'true' )
  ant.mkdir ( dir : javadocDirPath )
  def sourceDirectory = groovySrcDirs[0]
  ant.groovydoc (
             sourcePath : sourceDirectory ,
             destDir : groovyApiDocumentationDirectory ,
             packageNames : packageIncludeSpec ,
             overview : 'overview.html' ,
             'private' : 'true' ,
             use : 'true' ,
             //author : 'true' ,
             //version : 'true' ,
             windowTitle : packageTitle ,
             docTitle : packageTitle ,
             header : packageTitle ,
             footer : copyrightString,
             //source : sourceCompatibility
             )
}

task documentation ( dependsOn: [ 'javadoc' , 'myGroovyDoc' ] , description : 'Create the API documentation.' )

usePlugin ( 'maven' )

uploadArchives {
  repositories.mavenDeployer {
    repository ( url : 'http://repository.codehaus.org' )
  }
}

defaultTasks ( 'test' )
