//  Gant -- A Groovy way of scripting Ant tasks.
//
//  Copyright Â© 2008-9 Russel Winder
//
//  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
//  compliance with the License. You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software distributed under the License is
//  distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
//  implied. See the License for the specific language governing permissions and limitations under the
//  License.
//
//  Author : Russel Winder <russel.winder@concertant.com>

ant.property ( file : 'local.build.properties' )
ant.property ( file : 'build.properties' )

artifact = 'gant'
version = ant.antProject.properties.gantVersion

allprojects {
  group =  'org.codehaus.gant'
}  

//  For some reason the ant variable is not available in the subprojects closure :-(

def commonsCliVersion = ant.antProject.properties.commonsCliVersion
def antVersion = ant.antProject.properties.antVersion
def junitVersion = ant.antProject.properties.junitVersion
def ivyVersion = ant.antProject.properties.ivyVersion
def groovyAntTaskTestVersionPropertyFile = new File ( ant.antProject.properties.groovyAntTaskTestVersionPropertyFileName )

subprojects {

  usePlugin ( 'groovy' )
  usePlugin ( 'osgi' )
  
  sourceCompatibility = 5
  targetCompatibility = 5
  
  manifest.mainAttributes (
                           'Built-By' : System.properties.'user.name' ,
                           'Extension-Name' : artifact ,
                           'Specification-Title' : 'Gant: scripting Ant tasks with Groovy.' ,
                           'Specification-Version' : version ,
                           'Specification-Vendor' : 'The Codehaus' ,
                           'Implementation-Title' : 'Gant: Scripting Ant tasks with Groovy.' ,
                           'Implementation-Version' : version , 
                           'Implementation-Vendor' : 'The Codehaus'
                           )
  
  repositories {
    mavenCentral ( )
  }
  
  dependencies {
    compile (
             'commons-cli:commons-cli:' + commonsCliVersion ,
             'org.apache.ant:ant:' + antVersion
             )
    testCompile (
                 'junit:junit:' + junitVersion
                 )
    testRuntime (
                 'org.apache.ivy:ivy:' + ivyVersion
                 )
  }
  
  test.doLast {
    groovyAntTaskTestVersionPropertyFile.delete ( )
  }
  
  clean.doLast {
    ant.delete { fileset ( dir : '.' , includes : '**/*~, texput.log' ) }
    ant.delete ( dir :  'target_forMavenTest' )
  }

  def packageTitle = 'Gant ' + version
  def copyrightString = 'Copyright &#169; 2006&#8211;9  The Codehaus.  All Rights Reserved.'

  javadoc {
    //dependsOn ( 'compile' )
    //options.subPackages ( 'gant' , 'org.codehaus.gant' )
    options.overview ( 'overview.html' )
    options.showAll ( )
    options.encoding ( 'UTF-8' )
    options.setUse ( true )
    options.author ( true )
    options.version ( true )
    options.windowTitle ( packageTitle )
    options.docTitle ( packageTitle )
    options.footer ( copyrightString )
  }
  javadoc.doFirst {
    javadoc.title = packageTitle
    javadoc.options.docTitle = javadoc.title
  }
  
  groovydoc {
    dependsOn ( 'classes' )
    packageNames = [ 'gant.*' , 'org.codehaus.gant.*' ]
    overview = 'overview.html'
    includePrivate = false
    encoding = 'UTF-8'
    use = true
    author = 'true'
    version = 'true'
    windowTitle = packageTitle
    docTitle = packageTitle
    header = packageTitle
    footer = copyrightString
  }
  
  task myGroovyDoc ( dependsOn : 'classes' , description : 'Create the GroovyDoc API documentation.' ) << {
    def groovydocDirPath = 'build/' + groovydocDirName
    def packageIncludeSpec = 'gant.*,org.codehaus.gant.*'
    ant.delete ( dir : groovydocDirPath , quiet : 'true' )
    ant.mkdir ( dir : groovydocDirPath )
    def sourceDirectory = source.main.groovy.srcDirs[0]
    ant.groovydoc (
                   sourcePath : sourceDirectory ,
                   destDir : groovydocDirName ,
                   packageNames : packageIncludeSpec ,
                   overview : 'overview.html' ,
                   'private' : 'true' ,
                   use : 'true' ,
                   //author : 'true' ,
                   //version : 'true' ,
                   windowTitle : packageTitle ,
                   docTitle : packageTitle ,
                   header : packageTitle ,
                   footer : copyrightString,
                   //source : sourceCompatibility
                   )

  }
  
  task documentation ( dependsOn: [ 'javadoc' , 'myGroovyDoc' ] , description : 'Create the API documentation.' )
  
  usePlugin ( 'maven' )
  
  uploadArchives {
    repositories.mavenDeployer {
      repository ( url : 'http://repository.codehaus.org' )
    }
  }
  
  defaultTasks ( 'test' ) 
}

project ( ':gant' ) {
  //  If the user has GROOVY_HOME set then use that Groovy rather than the one speficied in the properties
  //  files.  However we have to fiddle to find the version number.  Even then we still have to go out to the 

  def groovyHome = System.getenv ( ).'GROOVY_HOME'
  def groovyLib = null
  if ( groovyHome ) {
    groovyLib = new File ( groovyHome , 'lib' )
    def groovyVersionPatternString = /^groovy-(all-)?([0-9].*)\.jar/
    def items = groovyLib.listFiles ( [ accept : { File dir , String name -> return ( name =~ groovyVersionPatternString ).find ( ) } ] as FilenameFilter )
    assert items 
    groovyVersion = ( items[0].name =~ groovyVersionPatternString )[0][2]
    assert groovyVersion
  }
  else {
    groovyVersion = ant.antProject.properties.groovyStandaloneVersion
  }
  archivesBaseName = artifact
  repositories {
    flatDir ( name : 'groovyInstallation' , dirs : [ new File ( groovyHome , 'embeddable' ) , groovyLib ] )
  }
  dependencies {
    groovy ( 'org.codehaus.groovy:groovy-all:' + groovyVersion )
  }
  compileGroovy.doFirst {
    println ( '\tUsing groovy version ' + groovyVersion )
  }
  test.doFirst {
    groovyAntTaskTestVersionPropertyFile.write ( 'groovyAntTaskTestVersion = ' + groovyVersion )
  }
}

[ [ '1.5' , ant.project.properties.groovy15Version ] ,
  [ '1.6' , ant.project.properties.groovy16Version ] ,
  [ '1.7' , ant.project.properties.groovy17Version ] ].each { item ->
  project ( ':gant_groovy' + item[0] ) {
    archivesBaseName = artifact + '_groovy' + item[0]
    dependencies {
      groovy ( 'org.codehaus.groovy:groovy-all:' + item[1] )
    }
    test.doFirst {
      groovyAntTaskTestVersionPropertyFile.write ( 'groovyAntTaskTestVersion = ' + item[1] )
    }
  }
}
