<?xml version="1.0" encoding="UTF-8" ?>

<!--
Gant - A Groovy build framework based on scripting Ant tasks.

Copyright Â© 2008 Russel Winder

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing permissions and limitations under the
License.
  
Author : Russel Winder <russel.winder@concertant.com>
-->

<project name="Gant Ant Task Test" default="gantTestDefaultTarget" xmlns:artifact="urn:maven-artifact-ant" basedir=".">

  <!--
      This build file has to work in two contexts.  If GROOVY_HOME is set, the jars from that installation
      of Groovy should be used so as to ensure testing in the right context.  If GROOVY_HOME is not set,
      Gant has been built using the jars downloaded from the Maven repository and these should be used so as
      to ensure testing in the right context.
      
      Assume this test is actually executed from the project top directory.  In order to access the right
      file we have to know where it is.
      
      There is a problem with Canoo CruiseControl at least as at 2008-07-12, it sets GROOVY_HOME and the
      Groovy installation is 1.5.5 which is known not to allow Gant to work.
  -->

  <property name ="toplevelDirectory" value="../../../../../../../.."/>

  <property file="${toplevelDirectory}/local.build.properties"/>
  <property file="${toplevelDirectory}/build.properties"/>

  <property environment="environment"/>

  <property name="targetDirectoryName" value="target_gant"/>

  <condition property="groovyHomeIsSet">
    <isset property="environment.GROOVY_HOME"/>
  </condition>

  <target name="-initializeWithGroovyHome" if="groovyHomeIsSet">
    <path id="groovyJarsId">
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="groovy-*.jar"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="commons-cli*.jar"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="asm*.jar"/>
      <fileset dir="${environment.GROOVY_HOME}/lib" includes="antlr*.jar"/>
    </path>
    <!--taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="groovyJarsId" /-->
    <taskdef name="gant" classname="org.codehaus.gant.ant.Gant">
      <classpath>
        <pathelement location="${toplevelDirectory}/${targetDirectoryName}/classes"/>
        <path refid="groovyJarsId"/>
      </classpath>
    </taskdef>
  </target>

  <target name="-initializeNoGroovyHome" unless="groovyHomeIsSet">
    <path id="mavenAntTaskJarPathId">
      <fileset dir="${toplevelDirectory}/jarfiles" includes="maven-ant-tasks-*.jar"/>
    </path>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="mavenAntTaskJarPathId"/>
    <artifact:dependencies pathId="groovyJarsId">
      <dependency groupId="org.codehaus.groovy" artifactId="groovy-all" version="${groovyVersion}"/>
    </artifact:dependencies>
    <!--taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="groovyJarsId" /-->
    <taskdef name="gant" classname="org.codehaus.gant.ant.Gant">
      <classpath>
        <pathelement location="${toplevelDirectory}/${targetDirectoryName}/classes"/>
        <path refid="groovyJarsId"/>
      </classpath>
    </taskdef>
  </target>

  <!--
      Cannot test not having a file attribute easily since the tests are initiated in the project top
      directory :-(
  -->
  <target name="gantTestDefaultTarget" depends="-initializeWithGroovyHome,-initializeNoGroovyHome">
    <gant file="build.gant"/>
  </target>
 
  <target name="gantTestNamedTarget" depends="-initializeWithGroovyHome,-initializeNoGroovyHome">
    <gant file="build.gant" target="blah"/>
  </target>

  <!--  Ensure there is no file of the name used in the Gant Ant task here. -->
  <target name="missingGantfile" depends="-initializeWithGroovyHome,-initializeNoGroovyHome">
    <gant file="blahBlahBlahBlah.blah"/>
  </target>

  <!--  Ensure there is no target called blahBlahBlahBlah. -->
  <target name="gantTaskdef" depends="-initializeWithGroovyHome,-initializeNoGroovyHome">
    <gant file="build.gant" target="gantTaskdef"/>
  </target>

  <!-- Test to see if definitions can be added using nested tags. -->
  <target name="gantWithParametersAsNestedTags" depends="-initializeWithGroovyHome,-initializeNoGroovyHome">
    <gant file="build.gant" target="gantParameters">
      <definition name="flob" value="adob"/>
      <definition name="burble"/>
    </gant>
  </target>

</project>
